input {
  border: none;
  line-height: 1.5;
  font-size: 16px;
  height: 48px;
  width: 100%;
  padding: 0 12px;
  outline: none;
  color: var(--input-color);
}

input::placeholder {
  color: var(--input-placeholder-color);
}

button {
  cursor: pointer;
  outline: none;
}

.bg-orange {
  /* we overwrite the default tachyons bg-orange class */
  background-color: var(--orange-light);
}

.register {
  display: grid;
  place-items: center; //  using css grid to stack the child boxes on top of each othe
  overflow: hidden;

  &-image {
    background-image: url('../images/location.jpg');
    background-position: center bottom;
  }
}

/* so our boxes stack on top of each other */
.front,
.back {
  grid-area: 1/1;
}

/*  we add a transition to the translate property */
.front {
  transition: translate 0.5s ease;
}

/* we toggle this class using javascript */
.front.slide-up {
  translate: 0 -100%;
}

/* Style for the stripe input elements */
.StripeElement {
  background-color: var(--white);
  padding: 12px;
}
/* here we lock the form when it's submitting */
.form-fields {
  transition: opacity 0.5s ease;
}

.processing .form-fields {
  /*  visual feedback to the user that the request is processing */
  opacity: 0.5;
  /* disabled interaction with the form when it's submitting */
  pointer-events: none;
}

.spinner {
  width: 40px;
  height: 40px;

  position: absolute;
  top: calc(50% - 28px);
  left: calc(50% - 20px);
  opacity: 0;
  z-index: 10;

  .processing & {
    opacity: 1;
  }
}

.double-bounce1,
.double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: var(--orange);
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;

  animation: sk-bounce 2s infinite ease-in-out;
}

.double-bounce2 {
  animation-delay: -1s;
}

@keyframes sk-bounce {
  0%,
  100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}
